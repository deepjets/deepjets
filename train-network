#!/usr/bin/env python

if __name__ == '__main__':
    from argparse import ArgumentParser

    parser = ArgumentParser()
    parser.add_argument('type', nargs='?', default='maxout', choices=['maxout', 'convnet'])
    parser.add_argument('--image-size', type=int, default=25)
    parser.add_argument('--batch-size', type=int, default=32)
    parser.add_argument('--sig', nargs='+')
    parser.add_argument('--bkg', nargs='+')
    args = parser.parse_args()
    
    from keras.optimizers import Adam
    from deepjets.models import get_maxout, get_convnet
    from deepjets.learning import train

    if args.type == 'maxout':
        model = get_maxout(size=args.image_size)
    else:
        model = get_convnet()

    model.compile(loss='categorical_crossentropy', optimizer=Adam()) # learn rate

    # Train the network
    train(model=model,
          signal_files=args.sig, background_files=args.bkg,
          flatten=args.type=='maxout',
          batch_size=args.batch_size)
