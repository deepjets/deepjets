#!/usr/bin/env python

import os
from argparse import ArgumentParser

parser = ArgumentParser()
parser.add_argument('--output', '-o', default=None)
parser.add_argument('events_file')
args = parser.parse_args()

if args.output is None:
    args.output = os.path.splitext(args.events_file)[0] + '_images.h5'

import numpy as np
from deepjets.preprocessing import preprocess
from deepjets.utils import jet_mass
import h5py

eta_edges = np.linspace(-1.2, 1.2, 26)
phi_edges = np.linspace(-1.2, 1.2, 26)

# read from the events file
h5_input = h5py.File(args.events_file, 'r')
dset_jets = h5_input['jets']
dset_trimmed_constit = h5_input['trimmed_constituents']

# create the output file
h5_output = h5py.File(args.output, 'w')
dt_images = np.dtype([('pT', np.double), ('mass', np.double), ('image', np.double, (25, 25))])
dset_images = h5_output.create_dataset('images', (len(dset_jets),), dtype=dt_images)

for event in xrange(len(dset_jets)):
    jets = dset_jets[event]
    trimmed_constit = dset_trimmed_constit[event]
    mass = jet_mass(trimmed_constit)
    image = preprocess(jets, trimmed_constit, eta_edges, phi_edges)
    # save the jet mass, pT and image
    dset_images[event] = (mass, jets['pT'][0], image)

h5_output.close()
