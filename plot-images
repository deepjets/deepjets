#!/usr/bin/env python


def plot(filename):
    import os
    import numpy as np
    from deepjets import generate
    from deepjets.preprocessing import preprocess
    from deepjets.utils import plot_jet_image, jet_mass
    from matplotlib import pyplot as plt
    import h5py
    import dask.array as da
    
    h5file = h5py.File(filename, 'r')
    dset_images = h5file['images']
    weights = None
    if 'auxvars' in h5file:
        auxvars = h5file['auxvars']
        if 'weights' in auxvars.dtype.names:
            weights = da.from_array(auxvars['weights'], chunks=1000)
    output_prefix = os.path.splitext(filename)[0]
    
    if weights is not None:
        print("plotting weighted average image {0} ...".format(filename))
    else:
        print("plotting average image {0} ...".format(filename))
    
    images = da.from_array(dset_images, chunks=(1000, 25, 25))
    if weights is None:
        avg_image = images.mean(axis=0).compute()
    else:
        avg_image = da.tensordot(images, weights, axes=(0, 0)).compute() / weights.sum().compute()

    # plot jet images
    fig = plt.figure(figsize=(6, 5))
    ax = fig.add_subplot(111)
    plot_jet_image(ax, avg_image, label_axes=False)
    fig.tight_layout()
    fig.savefig(output_prefix + '.png')


if __name__ == '__main__':
    from argparse import ArgumentParser

    parser = ArgumentParser()
    parser.add_argument('-n', '--jobs', type=int, default=-1)
    parser.add_argument('files', nargs='+')
    args = parser.parse_args()

    from deepjets.parallel import map_pool, FuncWorker

    map_pool(
        FuncWorker, [(plot, filename) for filename in args.files],
        n_jobs=args.jobs)
